./cJSON/tests/inputs/test6:4:      <meta name="viewport" content="width=device-width, initial-scale=1">
./cJSON/fuzzing/inputs/test6:4:      <meta name="viewport" content="width=device-width, initial-scale=1">
./main.c:255:		device->socket = client_sock;
Binary file ./upload/OBDII-4G.bin matches
Binary file ./upload/download-V1.0.9T.bin matches
Binary file ./upload/download.bin matches
Binary file ./upload/download-OBD-T-V1.0.3T.bin matches
Binary file ./upload/download_IUPR_V1.0.2T.bin matches
Binary file ./upload/download_9918_V1.0.2R.bin matches
Binary file ./upload/OBD1234567890AB.bin matches
Binary file ./upload/download_9918_V1.0.1R.bin matches
./OBD_Report/trunking.c:63:    printf("trunking_call Time[ %d | %d ]: %s \n", trunk->read, device->write, utc);
./OBD_Report/trunking.c:64:    if(trunk->read==device->write) return;
./OBD_Report/trunking.c:65:    trunk->read = device->write;
./OBD_Report/agreement/storage_pack.c:694:    snprintf(time, sizeof(time)-1, "%04d.%02d.%02d %02d:%02d:%02d \n", device->UTC[0]+2000, device->UTC[1], device->UTC[2]\
./OBD_Report/agreement/storage_pack.c:695:            , device->UTC[3], device->UTC[4], device->UTC[5]);
./OBD_Report/agreement/storage_pack.c:697:    cJSON_AddNumberToObject(_root, "socket", device->socket);
./OBD_Report/agreement/storage_pack.c:698:    cJSON_AddNumberToObject(_root, "save_log", device->save_log);
./OBD_Report/agreement/storage_pack.c:699:    cJSON_AddNumberToObject(_root, "type", device->type);
./OBD_Report/agreement/storage_pack.c:700:    cJSON_AddStringToObject(_root, "SN", device->sn);
./OBD_Report/agreement/storage_pack.c:701:    cJSON_AddStringToObject(_root, "VIN", device->VIN);
./OBD_Report/agreement/storage_pack.c:738:    device->socket = node_json->valueint;
./OBD_Report/agreement/storage_pack.c:741:    device->save_log = node_json->valueint;
./OBD_Report/agreement/storage_pack.c:744:    device->type = node_json->valueint;
./OBD_Report/agreement/storage_pack.c:747:    memcpy(device->sn, node_json->valuestring, strlen(node_json->valuestring));
./OBD_Report/agreement/storage_pack.c:750:    memcpy(device->VIN, node_json->valuestring, strlen(node_json->valuestring));
./OBD_Report/agreement/storage_pack.c:773:    if(sizeof (device->cache)>_psize)  // save data to ram
./OBD_Report/agreement/storage_pack.c:775:        device->len = _psize;
./OBD_Report/agreement/storage_pack.c:776:        device->write++;
./OBD_Report/agreement/storage_pack.c:777:        memcpy(device->cache, pack,  _psize);
./OBD_Report/agreement/agreement_server.c:366:    memcpy(device->sn, decode->data, decode->data_len);  // save sn
./OBD_Report/agreement/agreement_server.c:367:    //pr_debug("%s@%d device->sn: %s\n", __func__, __LINE__, device->sn);
./OBD_Report/agreement/agreement_server.c:414:    if(NULL != csend) csend(device->socket, obd_buf, len); // 发送数据到客户端
./OBD_Report/agreement/agreement_server.c:444:    memcpy(device->sn, decode->data, decode->data_len);  // save sn
./OBD_Report/agreement/agreement_server.c:445:    //pr_debug("%s@%d device->sn: %s\n", __func__, __LINE__, device->sn);
./OBD_Report/agreement/agreement_server.c:478:    if(NULL != csend) csend(device->socket, obd_buf, len); // 发送数据到客户端
./OBD_Report/agreement/agreement_server.c:533:    if(NULL != csend) csend(device->socket, obd_buf, len); // 发送数据到客户端
./OBD_Report/agreement/agreement_server.c:624:    memcpy(device->VIN, pack->VIN, sizeof (pack->VIN));
./OBD_Report/agreement/agreement_server.c:721:    device->type = _agree_ofp->protocol();
./OBD_Report/agreement/agreement_server.c:738:    printf("relay_fd:%d relay flag : %d \n", device->relay_fd, relay); fflush(stdout);
./OBD_Report/agreement/agreement_server.c:739:   if((device->relay_fd>=0) && (1==relay)) relay_msg(device->relay_fd, pack, len);
./OBD_Report/agreement/agreement_server.c:741:    if(device->save_log)
./OBD_Report/agreement/agreement_server.c:745:        if(strlen(device->sn)>=12)
./OBD_Report/agreement/agreement_server.c:747:            snprintf(filename, sizeof (filename)-1, "./log/jsons-%s.txt", device->sn);
./OBD_Report/agreement/agreement_server.c:749:        else if(strlen(device->VIN)>=8)
./OBD_Report/agreement/agreement_server.c:751:            snprintf(filename, sizeof (filename)-1, "./log/jsons-%s.txt", device->VIN);
./OBD_Report/agreement/agreement_server.c:777:    device->type = _agree_ofp->protocol();
./OBD_Report/mainwindow.cpp:174:    device->setModal(true);
./OBD_Report/mainwindow.cpp:175:    device->show();
./OBD_Report/json_list.c:140://    cJSON_AddItemToObject(node, device->name, item_json = cJSON_CreateObject());
./OBD_Report/json_list.c:141://    cJSON_AddStringToObject(item_json, "SerialNumber", device->SN);
./OBD_Report/json_list.c:142://    cJSON_AddStringToObject(item_json, "Model", device->Model);
./OBD_Report/json_list.c:143://    cJSON_AddStringToObject(item_json, "Firmware", device->Firmware);
./OBD_Report/json_list.c:144://    cJSON_AddStringToObject(item_json, "Config", device->Config);
./.git/logs/HEAD:21:5c67c041a38854e019dbe1baacffe9875df23ccf 4ef6b4d9f8d76d158177f009a94f0f2803a99f30 merafour <merafour@163.com> 1560617116 +0800	commit: device->sn
./.git/logs/refs/heads/OBD:20:5c67c041a38854e019dbe1baacffe9875df23ccf 4ef6b4d9f8d76d158177f009a94f0f2803a99f30 merafour <merafour@163.com> 1560617116 +0800	commit: device->sn
./accept_request.c:164:	device->save_log = 1;
./accept_request.c:165:	//msg_cache = (struct device_data*)container_of(&(device->msg_list), struct device_data, list);
./accept_request.c:166:	//msg_cache = (struct device_data*)container_of((device->msg_list.next), struct device_data, list);
./accept_request.c:167:	client = device->socket;
./accept_request.c:173:	device->relay_fd = -1;
./accept_request.c:182:			device->relay_fd = sock;
./accept_request.c:186:		printf("转发连接建立结束 host:%s port:%d fd:%d\n\n", relay_host, relay_port, device->relay_fd);
./accept_request.c:239:			if(print) printf("TCP/IP connect[%d]: %s SN:%s\n", (int)numchars, buf, device->sn);
./accept_request.c:240:			//printf("TCP/IP connect[%d]: %s SN:%s\n", (int)numchars, buf, device->sn);
./accept_request.c:341:	if(device->relay_fd>=0) relay_exit(device->relay_fd);
